name: Pull Request Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  # Build and test C++ libraries.
  test_library:
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14]
        compiler: [gnu-12, gnu-13, gnu-14]
        eigen: [ON]
        include:
          - os: ubuntu-22.04
            compiler: clang-default
            eigen: ON
          - os: macos-14
            compiler: clang-default
            eigen: ON
          - os: ubuntu-24.04
            compiler: gnu-12
            eigen: OFF
          - os: windows-2022
            compiler: gnu-12
            eigen: ON
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ssciwr/doxygen-install@v1
      - uses: seanmiddleditch/gha-setup-ninja@v5
      - name: Toolchain Setup - Unix
        if: ${{ !contains(matrix.os, "windows") }}
        run: |
          toolchain_dir=${PWD}/.github/workflow_toolchains
          toolchain=${toolchain_dir}/test_base.cmake
          echo 'include('${toolchain_dir}'/${{matrix.compiler}}.cmake)' >> $toolchain
      - name: Toolchain Setup - Windows
        if: ${{ contains(matrix.os, "windows") }}
        run: |
          $toolchain_dir = Join-Path -Path (Get-Location) -ChildPath ".github\workflow_toolchains"
          $toolchain = Join-Path -Path $toolchain_dir -ChildPath "test_base.cmake"
          Add-Content -Path $toolchain -Value "include('$toolchain_dir\$($env:matrix.compiler).cmake')"
      - name: Build and Test
        run: |
          toolchain=${PWD}/.github/workflow_toolchains/test_base.cmake
          cmake -Bbuild -H. -GNinja -DCMAKE_TOOLCHAIN_FILE="${toolchain}" -DENABLE_EIGEN_SUPPORT=${{matrix.eigen}}
          cmake --build build --parallel
          cd build
          ctest -VV
        shell: bash

  # Test Build of Documentation
  test_dox_build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v5
      - uses: ssciwr/doxygen-install@v1
      - uses: seanmiddleditch/gha-setup-ninja@v5
      - name: Build Doxygen Part
        run: |
          toolchain_dir=${PWD}/.github/workflow_toolchains
          toolchain=${toolchain_dir}/test_base.cmake
          echo 'include('${toolchain_dir}'/gnu-12.cmake)' >> $toolchain

          cmake -Bbuild -H. -GNinja -DCMAKE_TOOLCHAIN_FILE="${toolchain}"
          cmake --build build --target sigma_cxx_api --parallel
        shell: bash
      - name: Build Sphinx Part
        run:  |
          cd docs
          if [ -f requirements.txt ]; then
            pip install -r requirements.txt
          fi
          make html SPHINXOPTS="-W --keep-going -n"
        shell: bash