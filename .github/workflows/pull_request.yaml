name: Pull Request Workflow

on:
  pull_request:
    branches:
      - main

jobs:
  # Build and test C++ libraries.
  test_library_unix:
    strategy:
      matrix:
        os: [ubuntu-24.04, macos-14]
        compiler: [gnu-12, gnu-13, gnu-14]
        eigen: [ON]
        include:
          - os: ubuntu-22.04
            compiler: clang-default
            eigen: ON
          - os: macos-14
            compiler: clang-default
            eigen: ON
          - os: ubuntu-24.04
            compiler: gnu-12
            eigen: OFF
    continue-on-error: true
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ssciwr/doxygen-install@v1
      - uses: seanmiddleditch/gha-setup-ninja@v5
      - name: Build and Test
        run: |
          toolchain=${PWD}/.github/workflow_toolchains/${{matrix.compiler}}.cmake
          cmake -Bbuild -H. -GNinja -DCMAKE_TOOLCHAIN_FILE="${toolchain}" -DENABLE_EIGEN_SUPPORT=${{matrix.eigen}}
          cmake --build build --parallel
          cd build
          ctest -VV
        shell: bash

  test_library_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ssciwr/doxygen-install@v1
      - name: Build and Test
        run: |
          SET "toolchain=%cd%\.github\workflow_toolchains\windows.cmake"
          cmake -DCMAKE_TOOLCHAIN_FILE=%toolchain% -B "build" -G "Visual Studio 17 2022" -T host=x64 -A x64
          cmake --build build --config Debug --parallel
          cd build
          ctest -C Debug -T test -VV
        shell: cmd

  # Test Build of Documentation
  test_dox_build:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: ssciwr/doxygen-install@v1
      - uses: seanmiddleditch/gha-setup-ninja@v5
      - name: Build Doxygen Part
        run: |
          cmake -Bbuild -H. -GNinja -DONLY_BUILD_DOCS=ON -DDOCS_FAIL_ON_WARNING=ON
          cmake --build build --target sigma_cxx_api --parallel
        shell: bash